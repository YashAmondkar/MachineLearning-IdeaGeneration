/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * PayTune.java
 *
 * Created on May 12, 2013, 12:03:29 AM
 */

package cloudserver;

import java.util.Vector;
import org.jfugue.Pattern;
import org.jfugue.Player;
import java.io.FileInputStream;
import java.io.IOException;
import java.sql.*;
import java.util.*;
import java.util.logging.Level;
import java.util.logging.Logger;


public class PlayTune extends javax.swing.JFrame {

    /** Creates new form PayTune */
    public PlayTune() {
        initComponents();
        listData = new Vector();
            MySqlConnection mysql= new MySqlConnection();
            String tuneCombination = null;
            try
            {
                Connection con = (Connection) mysql.getMySQLConnection();
                String query = "SELECT  output FROM DATA ORDER by tune_id desc LIMIT  1";
                System.out.println(query);
                PreparedStatement stmt = con.prepareStatement(query);
                ResultSet rs = stmt.executeQuery();
                while(rs.next())
                {
                    tuneCombination = rs.getString(1);
                }
                listData.clear();
                StringTokenizer token = new StringTokenizer(tuneCombination , ":");
                while(token.hasMoreTokens())
                {
                    listData.add(token.nextToken());
                }
                 outputList.setListData(listData);
            }
            catch(Exception e)
            {
                e.printStackTrace();
            }

    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        outputList = new javax.swing.JList();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBounds(new java.awt.Rectangle(100, 100, 0, 0));
        setMinimumSize(new java.awt.Dimension(800, 600));
        getContentPane().setLayout(null);

        jLabel2.setText("Output:");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(111, 62, 38, 14);

        outputList.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        outputList.setFont(new java.awt.Font("Comic Sans MS", 3, 14)); // NOI18N
        outputList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                outputListValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(outputList);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(380, 70, 320, 330);

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cloudserver/z_Buttons_play.jpg"))); // NOI18N
        jButton1.setBorder(javax.swing.BorderFactory.createMatteBorder(5, 5, 5, 5, new java.awt.Color(51, 0, 102)));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(380, 450, 130, 60);

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cloudserver/z_Buttons_back.jpg"))); // NOI18N
        jButton2.setBorder(javax.swing.BorderFactory.createMatteBorder(5, 5, 5, 5, new java.awt.Color(51, 0, 102)));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2);
        jButton2.setBounds(570, 450, 130, 60);

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cloudserver/music_playtune.jpg"))); // NOI18N
        getContentPane().add(jLabel3);
        jLabel3.setBounds(0, 0, 910, 590);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void outputListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_outputListValueChanged

}//GEN-LAST:event_outputListValueChanged

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        String sargam = (String)listData.get(outputList.getSelectedIndex());
        Pattern pattern=new Pattern(sargam);
        Player player=new Player();
        player.play(pattern);
}//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        MainFrame main = new MainFrame();
        main.show();
        this.dispose();

    }//GEN-LAST:event_jButton2ActionPerformed

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PlayTune().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList outputList;
    // End of variables declaration//GEN-END:variables
    private Vector listData;
    private List<Client> clientList;
    private String [] hostPort;
    private List<String> inputNoteList;
}
